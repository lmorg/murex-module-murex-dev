func murex-dev {
    # Sets murex up so I can dev it easier
    source {
        cd $GOPATH/src/github.com/lmorg/murex
        config: set shell prompt (murex >>)
        agent
        
        func mxbuild {
            # Builds murex then launches it
            try {
                out: "Running docgen...."
                docgen <!out> -debug -config gen/docgen.yaml
                out: "Formatting generated source...."
                go <null> fmt @{g: builtins/docs/*.go}
                go <null> fmt @{g: config/defaults/*.go}
                out: "Compiling murex...."
                go build github.com/lmorg/murex
                out: "Starting...."
                ./murex
            }
        }

        func mxtest {
            # Builds murex then runs the testing frameworks against the compiled binary
            try {
                out: "Running docgen...."
                docgen <!out> -verbose -debug -config gen/docgen.yaml
                out: "Formatting generated source...."
                go <null> fmt @{g: builtins/docs/*.go}
                go <null> fmt @{g: config/defaults/*.go}
                out: "Compiling murex...."
                go build github.com/lmorg/murex
                out: "Running test suites...."
                go test ./...
                ./test/regression_test.sh
                ./test/test_goos.mx
            }
            catch {
                out "{RED}Testing failed :({RESET}"
            }
        }

        alias: mxinstall=go install github.com/lmorg/murex
        alias: mxdocgen=go install github.com/lmorg/murex/utils/docgen

        func mxbuiltin-src {
            find $GOPATH/src/github.com/lmorg/murex/builtins/ -name *.go -exec grep -H (lang\.GoFunctions\["$ARGS[1]"\]) {} \; -> regexp s,$GOPATH/src/github.com/lmorg/murex/builtins/,,
        }
    }
}
